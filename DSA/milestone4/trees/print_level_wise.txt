import java.util.Queue;
public class Solution {

/*	TreeNode structure 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/
	
	
	
	public static void printLevelWise(TreeNode<Integer> root) {
		/* Your class should be named Solution 
 		 * Don't write main(). 
		 * Don't read input, it is passed as function argument. 
		 * Print output and don't return it. 
		 * Taking input is handled automatically. 
		 */
        QueueUsingLL<TreeNode<Integer>> treeQueue = new QueueUsingLL<TreeNode<Integer>>();
        treeQueue.enqueue(root);
        // System.out.println(root.data);
        int count = 0;
        while(!treeQueue.isEmpty()) {
        int n = treeQueue.size();
        	while (n > 0) {
            try{
            TreeNode<Integer> p = treeQueue.dequeue();
            System.out.print(p.data);
            for (int i = 0; i < p.children.size(); i++)
                treeQueue.enqueue(p.children.get(i));
            n--;
            } catch (QueueEmptyException e) {
                
            }
            if(n>0) {
                System.out.print(" ");
            }
        }
        System.out.println();
        }
    }
		
}