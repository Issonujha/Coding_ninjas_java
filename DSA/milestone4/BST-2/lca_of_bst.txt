public class Solution {

	/*
	 * Binary Tree Node class
	 * 
	 * class BinaryTreeNode<T> { T data; BinaryTreeNode<T> left; BinaryTreeNode<T> right;
	 * 
	 * public BinaryTreeNode(T data) { this.data = data; } }
	 */


	
	public static int getLCA(BinaryTreeNode<Integer> root, int a, int b) {
        if(root==null)
            return -1;
        if(root.data==a)
            return a;
        if(root.data==b)
            return b;
        // int left = getLCA(root.left, a, b);
        // int right = getLCA(root.right, a, b);
        // if(left!=-1 && right!=-1)
        //     return root.data;
        // if(left!=-1)
        //     return left;
        // if(right!=-1)
        //     return right;
       	if(a>root.data && b<root.data || a<root.data && b>root.data) {
            return root.data;
        }
        int left = getLCA(root.left, a, b);
        int right = getLCA(root.right, a, b);
        if(left!=-1 && right!=-1) {
            return root.data;
        }
        if(left!=-1) {
            return left;
        }
        if(right!=-1) {
            return right;
        }
        return -1;
	}
}