/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */
import java.util.*;
public class Solution {
    static ArrayList<Integer> arr = new ArrayList<Integer>();
    static void setArray(BinaryTreeNode<Integer> root) {
        if(root==null) {
            return;
        }
        arr.add(root.data);
        setArray(root.left);
        setArray(root.right);
    }
	
	static void pairSum(BinaryTreeNode<Integer> root, int sum) {

		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
	 	 * Taking input and printing output is handled automatically.
        */
        setArray(root);
        Collections.sort(arr);
        for(int i=0, j=arr.size()-1; i<arr.size() && j>=0;) {
            // System.out.println("Hello");
            if(arr.get(i)+arr.get(j)==sum) {
                System.out.println(arr.get(i) + " " + arr.get(j));
                i++;
                j--;
            }
            else if(arr.get(i)+arr.get(j)<sum) {
                i++;
            }
            else if(arr.get(i)+arr.get(j)>sum) {
                j--;
            }
            if(i>=j) {
                break;
            }
        }
    }
}