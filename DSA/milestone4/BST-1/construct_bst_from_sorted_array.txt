public class Solution {

	/*	Binary Tree Node class 
	 * 
	 * 	class BinaryTreeNode<T> {
			T data;
			BinaryTreeNode<T> left;
			BinaryTreeNode<T> right;
			
			public BinaryTreeNode(T data) {
				this.data = data;
			}
		}
		*/
		public static BinaryTreeNode<Integer> SortedArrayToBST(int []arr, int sI, int eI) {
            if(sI>eI) {
                return null;
            }
            int mid = (sI+eI)/2;
            BinaryTreeNode<Integer> root = new BinaryTreeNode<Integer>(arr[mid]);
            root.left = SortedArrayToBST(arr, sI, mid-1);
            root.right = SortedArrayToBST(arr, mid+1, eI);
            return root;
        }
		public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr, int n){
			BinaryTreeNode<Integer> root = SortedArrayToBST(arr, 0, n-1);
            return root;
		}
	}