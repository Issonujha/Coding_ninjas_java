/*

    Following is the Node class already written for the Linked List

    class LinkedListNode<T> {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) {
            this.data = data;
        }
    }

*/


public class Solution {

	public static LinkedListNode<Integer> evenAfterOdd(LinkedListNode<Integer> head) {
		//Your code goes here
        if(head==null ||head.next==null) {
            return head;
        }
    	LinkedListNode<Integer> oH = null;
        LinkedListNode<Integer> oT = null;
        LinkedListNode<Integer> eH = null;
        LinkedListNode<Integer> eT = null;
        while(head!=null) {
            if(head.data%2==0) {
                if(eH==null) {
                    eH = head;
                    eT = head;
                    // eT.next = null;
                    // eT = eT.next;
                    // head = head.next;
                 //  continue;
                  
                }
                else{
                eT.next = head;
                eT = eT.next;
                }
            }
            else {
                if(oH==null) {
                    oH = head;
                    oT = head;
                    // oT = oT.next;
                    // head = head.next;
                    // continue;
                }
                else{
                oT.next = head;
                oT = oT.next;
            }
            }
            head = head.next;
        }
        if(oH==null) {
            // System.out.println("Hello");
            return eH;
        }
        else{
            oT.next=eH;
        }
        // if(eH==null) {
        //     // System.out.println("Hello1");
        //     return oH;
        // }
        if(eT!=null){
            eT.next=null;
        }
     //  	oT.next = eH;
        return oH;
	}
}

