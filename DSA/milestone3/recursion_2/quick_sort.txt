/*
	To apply the method explained in the hint video, we have to add two more parameters in the function call. This can be done by calling a helper function from given function. The helper function can have three parameters: array, start index, end index.  
	
	Skeleton code to achieve this:
	public class Solution {
		public static void quickSort(int[] input, int startIndex, int endInedx) {
			// your code goes here
		}
	
		public static void quickSort(int[] input) {
			quickSort(input, 0, input.length - 1);
		}
	
	}
	
*/


public class Solution {
	
	public static void quickSort(int[] input) {
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * No need to print or return the output.
		 * Taking input and printing output is handled automatically.
		 */
		int sI = 0;
        int eI = input.length-1;
        quickSort(input, sI, eI);
	}
    public static void quickSort(int[] input, int sI, int eI) {
        if(sI>=eI) {
            return;
        }
        int pivot = pivotPos(input, sI, eI);
        quickSort(input, sI, pivot-1);
        quickSort(input, pivot+1, eI);
    }
    public static int pivotPos(int[] input, int sI, int eI) {
        int pivotEle = input[eI];
        int i = sI-1;
        for(int j = sI; j<eI;j++) {
            if(input[j]<=pivotEle) {
                i++;
                int temp = input[j];
                input[j] = input[i];
                input[i] = temp;
            }
        }
        int temp = input[eI];
        input[eI] = input[i+1];
        input[i+1] = temp;
        return i+1;
    }
}