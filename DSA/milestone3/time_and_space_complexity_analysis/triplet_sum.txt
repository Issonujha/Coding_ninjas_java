import java.util.Arrays;
public class Solution {	

	public static int sumOfN(int x){
        if(x==1){
            return 1;
        }
        return x+sumOfN(x-1);
    }
    
    public static int pairSum(int[] arr, int startIndex, int num) {
        //Your code goes here
        int count=0;
        
        for(int i=startIndex,j=arr.length-1;i<j;){
            if(arr[i]+arr[j]==num){
                if(arr[i]==arr[j]){
                    int countNum=0;
                    while(i<j){
                        i++;
                        countNum++;
                    }
                    return count+sumOfN(countNum);
                }
                int counti=1,countj=1;
                while(arr[i]==arr[i+1]){
                    i++;
                    counti++;
                }
                while(arr[j-1]==arr[j] && i<j){
                    countj++;
                    j--;
                }
                i++;j--;
                count+=counti*countj;
            }
            else if(arr[i]+arr[j]>num){
                j--;
            }else{
                i++;
            }
        }
        return count;
    }
    
    public static int tripletSum(int[] arr, int num) {
		//Your code goes here
        Arrays.sort(arr);
        int count=0;
        for(int i=0;i<arr.length;i++){
            count+=pairSum(arr, i+1, num-arr[i]);
        }
        return count;
	}
}