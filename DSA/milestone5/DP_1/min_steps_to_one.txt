public class Solution {

	public static int countMinStepsToOne(int n) {
		//Your code goes here
        if(n==1) {
            return 0;
        }
        int op1 = countMinStepsToOne(n-1);
        int minSteps = op1;
        
        if(n % 3==0) {
            int op2 = countMinStepsToOne(n/3);
            minSteps = Math.min(minSteps, op2);
        }
        if(n%2==0) {
            int op3 = countMinStepsToOne(n/2);
            minSteps = Math.min(minSteps, op3);
        }
        // count = countMinStepsToOne(n, count);
        return 1 + minSteps;
	}
}
    
//     public static int countMinStepsToOne(int n, int count) {
//     	if(n==1) {
//     	return count;
    	// }
//     	if(n%3==0 || (n-1)%3==0) {
//     	if((n-1)%3==0){
//     	count++;
//     	count = countMinStepsToOne(n-1, count);
//     	}
//     	else{
//     	count++;
//     	count = countMinStepsToOne(n/3, count);
//     	}
//     	}
//     	else if(n%2==0 || (n-1)%2==0) {
//     	if((n-1)%2==0){
//     	count++;
//     	count = countMinStepsToOne(n-1, count);
//     	}
//     	else{
//     	count++;
//     	count = countMinStepsToOne(n/2, count);
//     	}
//     	}
//     	return count;
        
//     }

// }