public class Solution {
	public static void heapify(int arr[], int i) {
        int cIndex = i;
        int pIndex = (cIndex-1)/2;
        while(cIndex>0) {
            if(arr[pIndex]>arr[cIndex]) {
                int temp = arr[cIndex];
                arr[cIndex] = arr[pIndex];
                arr[pIndex] = temp;
                cIndex = pIndex;
                pIndex = (cIndex-1)/2;
            }
            else {
                break;
            }
        }
    }
    public static int removeMinToSort(int arr[], int length) {
        int rElement =  arr[0];
        arr[0] = arr[length-1];
        length--;
        int pIndex = 0;
        int leftChildIndex =  1;
        int rightChildIndex =  2;
        while(leftChildIndex<length) {
        	int minIndex = pIndex;
            if(arr[leftChildIndex] < arr[minIndex]) {
                minIndex = leftChildIndex;
            }
            if(rightChildIndex<length && arr[rightChildIndex] < arr[minIndex]) {
                minIndex = rightChildIndex;
            }
            if(minIndex!=pIndex) {
                int temp = arr[pIndex];
                arr[pIndex] = arr[minIndex];
                arr[minIndex] = temp;
                pIndex = minIndex;
                leftChildIndex = 2*pIndex+1;
                rightChildIndex = 2*pIndex+2;
            }else {
                break;
            }
        }
        return rElement;
    }
	public static void inplaceHeapSort(int arr[]) {
		/* Your class should be named Solution
		* Don't write main().
		* Don't read input, it is passed as function argument.
		* Change in the given input itself.
		* Taking input and printing output is handled automatically.
		*/
        for(int i = 0; i<arr.length; i++) {
        	heapify(arr, i);
        }
        // int length = arr.length-1;
        for(int i = 0; i<arr.length; i++) {
        	arr[arr.length-1-i] = removeMinToSort(arr, arr.length-i);
        }
    }
}