public class Solution{
    static int knapsack(int[] weight, int[] value, int n, int maxWeight) {

            /* Your class should be named Solution
            * Don't write main().
            * Don't read input, it is passed as function argument.
            * Change in the given tree itself.
            * No need to return or print the output.
            * Taking input and printing output is handled automatically.
            */
        int l = value.length;
        return knapsack(value, maxWeight, weight, l);

    }
    static int knapsack(int val[], int W, int wt[], int n)
    {
        int i, w;
        int K[][] = new int[n + 1][W + 1];
        // Build table K[][] in bottom up manner
        for (i = 0; i <= n; i++)
        {
            for (w = 0; w <= W; w++)
            {
                if (i == 0 || w == 0)
                    K[i][w] = 0;
                else if (wt[i - 1] <= w) {
                    K[i][w]
                        = Math.max(val[i - 1]
                         + K[i - 1][w - wt[i - 1]],
                         K[i - 1][w]);
                }
                else
                    K[i][w] = K[i - 1][w];
            }
        }
        return K[n][W];
    }
}