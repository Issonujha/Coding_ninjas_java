import java.util.Arrays;

public class Solution {

	
	public static int countWaysToMakeChange(int denominations[], int value){
        // Write your code here
        int n = denominations.length;
        return countWaysToMakeChange(denominations, value, n);
	}
    public static int countWaysToMakeChange(int S[], int n, int m){
        // Write your code here
        // if(value==0) {
        //     return 1;
        // }
        // if(value<0) {
        //     return 0;
        // }
        // if (n <= 0 && value >= 1){
        // 	return 0;
        // }
        // return countWaysToMakeChange(denominations, value-denominations[n-1], n) + countWaysToMakeChange(denominations, value, n-1);
        int[] table = new int[n+1];
        // Arrays.fill(table, 0);
        table[0] = 1;
        for (int i=0; i<m; i++)
            for (int j=S[i]; j<=n; j++)
                table[j] += table[j-S[i]];
 
        return table[n];
	}
}