import java.util.Arrays;
public class Solution {
	public static int mcm(int[] p){
		
	/* Your class should be named Solution
	 * Don't write main().
	 * Don't read input, it is passed as function argument.
	 * Return output and don't print it.
	 * Taking input and printing output is handled automatically.
	*/
        int dp[][] = new int[p.length-1][p.length];
        for(int []row:dp) {
            Arrays.fill(row, -1);
        }
        return mcm(p, 1, p.length-1, dp);
		// return mcm(p, 1, p.length-1);
	}
	
    public static int mcm(int[] p, int sI, int eI, int [][]dp) {
        if(sI==eI) {
            return 0;
        }
        if(dp[sI][eI]!=-1) {
            return dp[sI][eI];
        }
        dp[sI][eI] = Integer.MAX_VALUE;
        
        for(int i = sI; i < eI; i++) {
            dp[sI][eI] = Math.min(dp[sI][eI], mcm(p, sI, i, dp) + mcm(p, i + 1, eI, dp) + (p[sI-1] * p[i] * p[eI]));
        }
        return dp[sI][eI];
    }
    
    public static int mcm(int[] p, int sI, int eI){
    	if(sI==eI) {
            return 0;
        }
        int min = Integer.MAX_VALUE;
        for(int i = sI; i < eI; i++) {
            int count = mcm(p, sI, i) + mcm(p, i + 1, eI) + (p[sI - 1] * p[i] * p[eI]);
            if(min > count) {
                min = count;
            }
        }
    	return min;
    }

	
}