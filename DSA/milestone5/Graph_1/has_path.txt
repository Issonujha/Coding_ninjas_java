import java.util.LinkedList;
import java.util.Queue;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
public class Solution {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    public static boolean print(int[][] adj, int v1, int v2) {
		boolean visited[] = new boolean[adj.length];
		Queue<Integer> q = new LinkedList<>();
		return printBFS(adj, visited, q, v1, v2);
	}

	private static boolean printBFS(int[][] adj, boolean[] visited, Queue<Integer> q, int sI, int v2) {
		q.add(sI);
		visited[sI] = true;
		while(!q.isEmpty()) {
            int s = q.poll();
			for(int i = 0; i<adj.length; i++) {
				if(adj[s][i]==1 && !visited[i]) {
                    if(i==v2) {
                        return true;
                    }
					q.add(i);
					visited[i] = true;
				}
			}
		}
        return false;
	}
    
	public static void main(String[] args) throws NumberFormatException, IOException {
        /* Write Your Code Here
		 * Complete the Rest of the Program
		 * You have to take input and print the output yourself
		 */
		String s[] = br.readLine().split(" ");
        int n = Integer.parseInt(s[0]);
        int adj[][] = new int[n][n];
		int e = Integer.parseInt(s[1]);
		for(int i = 0; i<e; i++) {
			String str[] = br.readLine().split(" ");
            int st = Integer.parseInt(str[0]);
            int fin = Integer.parseInt(str[1]);
			adj[st][fin] = 1;
			adj[fin][st] = 1;
		}
        String val[] = br.readLine().split(" ");
        int v1 = Integer.parseInt(val[0]);
        int v2 = Integer.parseInt(val[1]);
		System.out.println(print(adj, v1, v2));
	}

}